# Customizable variables
set OGSEGMENT 300           # length of the first segment 
set HOWDEEP 3               # "deepness" of the fractals
                            # currently 2 deep level works

# Do not touch to these
set SEGMENT OGSEGMENT
set NBSEGMENTS 1
set NBSEGMENTMINUSONE 1
set MOD4 -8
set STAY 1
set L60 0
set L60B 0
set R120 0
set VOID 0
set STAY2 0
set L602 1
set L60B2 0
set R1202 0
set VOID2 0

# Makes a segment
proc INIT {
    up
    #position -SEGMENT/2, 0
    right 120
    color black
    down
    fw SEGMENT
    up
    bw SEGMENT
}

# One iteration of Koch, see https://en.wikipedia.org/wiki/Koch_snowflake
proc KOCH {
    # Erase middle segment
    color white
    fw SEGMENT
    down
    fw SEGMENT
    up
    
    # Draw equilateral triangle
    color black
    bw SEGMENT
    left 60
    down 
    fw SEGMENT
    right 120
    fw SEGMENT
    up
    left 60
    fw SEGMENT
}

# Next state for the angle of the next koch iteration
proc NEXT {
    repeat R120 {
        set R120 0
        set VOID 1
    }
    repeat L60 {
        set L60 0
        set R120 1
    }
    repeat STAY {
        set STAY 0
        set L60 1
    }
    repeat L60B {
        set L60B 0
        set STAY 1
    }
    repeat VOID {
        set VOID 0
        set L60B 1
    }
}

proc NEXT2 {
    repeat R1202 {
        set R1202 0
        set VOID2 1
    }
    repeat L602 {
        set L602 0
        set R1202 1
    }
    repeat STAY2 {
        set STAY2 0
        set L602 1
    }
    repeat L60B2 {
        set L60B2 0
        set STAY2 1
    }
    repeat VOID2 {
        set VOID2 0
        set L60B2 1
    }
}

# modulus
proc MODULUS {
    #q = a / b;             //finding quotient (integer part only)
    #p = q * b;             //finding product
    #remainder = a - p;     //finding modulus
    set Q NBSEGMENTS/4      # Cannot take integer part
    set P Q * 4
    set R NBSEGMENTS - P
    print R
    set NBSEGMOD4 - R
    set NBSEGMOD4 NBSEGMOD4 +1
    print NBSEGMOD4
}

# Draw the fractals for a segment
proc FRACTAL {
    set SEGMENT SEGMENT / 3
    repeat NBSEGMENTS {
        call KOCH
        repeat L60 {left 60}
        repeat R120 {right 120}
        repeat L60B {left 60}
        set MOD4 MOD4 + 1
        repeat MOD4{
            set MOD4 -3
            repeat L602 {left 60}
            repeat R1202 {right 120}
            repeat L60B2 {left 60}
            call NEXT2
        }
        call NEXT
    }
    bw SEGMENT*3*NBSEGMENTMINUSONE
    set NBSEGMENTS NBSEGMENTS*4
    set NBSEGMENTMINUSONE NBSEGMENTMINUSONE*3
}

proc RESET {
    set NBSEGMENTMINUSONE 1
    set NBSEGMENTS 1
    set STAY 1
    set L60 0
    set L60B 0
    set R120 0
    set VOID 0
    set SEGMENT OGSEGMENT
    set MOD4 -8
}

# Main
up
position -SEGMENT/2, -100
left 30
down
repeat 3 {
    call INIT

    repeat HOWDEEP {
        call FRACTAL
    }

    call RESET
    fw SEGMENT
}